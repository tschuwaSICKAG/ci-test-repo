import{_ as e,j as a,k as i,a5 as r}from"./app.205ecfeb.js";import"./vendor.bd9a847e.js";const n={},o=r('<h1 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h1><h2 id="functional-features" tabindex="-1"><a class="header-anchor" href="#functional-features" aria-hidden="true">#</a> Functional Features</h2><h3 id="expose-capabilities" tabindex="-1"><a class="header-anchor" href="#expose-capabilities" aria-hidden="true">#</a> Expose capabilities</h3><p>Upgrade any web application to a micro frontend by exposing its capabilities.</p><h3 id="embedding-of-micro-frontends" tabindex="-1"><a class="header-anchor" href="#embedding-of-micro-frontends" aria-hidden="true">#</a> Embedding of micro frontends</h3><p>Embed micro frontends in your application.</p><h3 id="configure-embedded-micro-frontends" tabindex="-1"><a class="header-anchor" href="#configure-embedded-micro-frontends" aria-hidden="true">#</a> Configure embedded micro frontends</h3><p>Configure embedded micro frontends to fit them perfectly into your application.</p><h3 id="service-api" tabindex="-1"><a class="header-anchor" href="#service-api" aria-hidden="true">#</a> Service API</h3><p>Provide services to other micro frontends and the whole Arrangement and use services, other Contexts are exposing.</p><h3 id="topic-api" tabindex="-1"><a class="header-anchor" href="#topic-api" aria-hidden="true">#</a> Topic API</h3><p>Publish messages or subscribe to topics which are available for all parts of your application.</p><h3 id="coming-soon-style-synchronization" tabindex="-1"><a class="header-anchor" href="#coming-soon-style-synchronization" aria-hidden="true">#</a> (coming soon) Style Synchronization</h3><p>Define styles for your application, the embedded micro frontends will adopt it. Users of your application can also change styles at runtime, e.g. to switch to a dark-theme.</p><h3 id="coming-soon-style-synchronization-1" tabindex="-1"><a class="header-anchor" href="#coming-soon-style-synchronization-1" aria-hidden="true">#</a> (coming soon) Style Synchronization</h3><p>Micro frontends adopt the styling of their parents to make your application look like one piece.</p><h2 id="non-functional-features" tabindex="-1"><a class="header-anchor" href="#non-functional-features" aria-hidden="true">#</a> Non-functional Features</h2><h3 id="framework-agnosticity" tabindex="-1"><a class="header-anchor" href="#framework-agnosticity" aria-hidden="true">#</a> Framework Agnosticity</h3><p>Micro frontends built with different frameworks can be combined to one application without effort.</p><h3 id="scope-isolation" tabindex="-1"><a class="header-anchor" href="#scope-isolation" aria-hidden="true">#</a> Scope Isolation</h3><p>Guarantees compatibility in every scenario.</p><h3 id="flexibility" tabindex="-1"><a class="header-anchor" href="#flexibility" aria-hidden="true">#</a> Flexibility</h3><p>Bundle micro frontends into your application at build time or include them from any other origin - they can even be added and removed dynamically at runtime.</p><h3 id="leightweight" tabindex="-1"><a class="header-anchor" href="#leightweight" aria-hidden="true">#</a> Leightweight</h3><p>Minified and gzipped, its footprint is just about 12 KB.</p><h3 id="easy-to-use" tabindex="-1"><a class="header-anchor" href="#easy-to-use" aria-hidden="true">#</a> Easy to use</h3><p>Create a micro frontend with just a few lines of code.</p><h3 id="simple" tabindex="-1"><a class="header-anchor" href="#simple" aria-hidden="true">#</a> Simple</h3><p>Use a self explainatory api to describe your micro frontends and orchestrate them in complex arrangements effortlessly.</p><h3 id="rock-solid" tabindex="-1"><a class="header-anchor" href="#rock-solid" aria-hidden="true">#</a> Rock Solid</h3><p>Built on web standards and only a few simple core concepts means that you never run into magic behaviour that ruins your day.</p><h3 id="extendable" tabindex="-1"><a class="header-anchor" href="#extendable" aria-hidden="true">#</a> Extendable</h3><p>Simply wrap the expose() call to create custom functionality.</p>',33),t=[o];function d(s,h){return a(),i("div",null,t)}const p=e(n,[["render",d],["__file","features.html.vue"]]);export{p as default};
