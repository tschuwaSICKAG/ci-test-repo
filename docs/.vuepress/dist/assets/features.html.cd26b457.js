import{_ as e,j as n,k as a,a5 as i}from"./app.205ecfeb.js";import"./vendor.bd9a847e.js";const s={},r=i(`<h1 id="formal-definition-of-features" tabindex="-1"><a class="header-anchor" href="#formal-definition-of-features" aria-hidden="true">#</a> Formal Definition of Features</h1><p>This is a list of all notable Collage features, described in a testable and explicit language.</p><h2 id="service-calls" tabindex="-1"><a class="header-anchor" href="#service-calls" aria-hidden="true">#</a> Service Calls</h2><p>Collage fragments should be able to expose and call service functions.</p><div class="language-gherkin line-numbers-mode" data-ext="gherkin"><pre class="language-gherkin"><code> <span class="token atrule">Given</span> <span class="token atrule">a</span> fragment exposes a service
  <span class="token atrule">When</span> the fragment calls the service on the context api
  <span class="token atrule">Then</span> it should perform the previously exposed function
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When embedded in arrangements, those service functions should be able to be overwritten by the arrangement.</p><div class="language-gherkin line-numbers-mode" data-ext="gherkin"><pre class="language-gherkin"><code> <span class="token atrule">Given</span> <span class="token atrule">an</span> arrangement embeds a fragment
   <span class="token atrule">And</span> both expose the same service function
  <span class="token atrule">When</span> the embedded fragment calls the service function
  <span class="token atrule">Then</span> it should perform the function exposed by the arrangement
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rest" tabindex="-1"><a class="header-anchor" href="#rest" aria-hidden="true">#</a> Rest</h2><ul><li>direct functions andcalling them on named embedded fragments</li><li>topic usage</li><li>versioned services</li><li>fragment configuration</li><li>theming (?)</li><li>expose provides ContextApi</li><li>error on unknown service</li><li>error on service withmissing own implementation</li></ul><p><strong>Why?</strong></p><ul><li>Should add services of children to own context when child is registered on expose</li></ul><p><strong>How?</strong></p><ul><li>topics as part of services or as own type?</li><li>maybe even <em>implicit</em> topics (analogous to MQTT)?</li><li>service implementation overwrite order?</li><li>rename services -&gt; features?</li></ul>`,13),t=[r];function l(o,d){return n(),a("div",null,t)}const h=e(s,[["render",l],["__file","features.html.vue"]]);export{h as default};
